# https://www.appveyor.com/docs/appveyor-yml/
# https://www.appveyor.com/docs/getting-started-with-appveyor-for-linux/

version: '1.14.{build}'

#branches:   
# # (all by default)
#  only:
#  except:

#skip_tags: false
#skip_non_tags: false
#skip_commits:
#only_commits
#skip_branch_with_pr: false

max_jobs: 1

#image:
 # - Ubuntu1804
#  - Visual Studio 2017
#  Skipping because no windows atm

#
init:
  - docker pull mcr.microsoft.com/mssql/server
  - docker network create --driver bridge machete-bridge
  - docker network inspect machete-bridge

#clone_folder: /home/appveyor/projects/machete-web
#shallow_clone: false
#clone_depth: (int)

# (/etc/hosts)
hosts:
  sqlserver: 127.0.0.1

# https://ci.appveyor.com/account/savagelearning/tools/encrypt
environment:
  APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu1804
  APPVEYOR_BUILD_WORKER_CLOUD: gce-test
  MSBUILDDISABLENODEREUSE: 1
  DOCKER_PASSWORD:
    secure: q4kZwveA7LCpRBLmWNpf5Q==

#matrix: [...]
#cache:

#services:
#  - mssql2014

stack:
  - node 12

install:
  - git submodule init
  - git submodule update
#  - curl -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -
#  - sudo apt-get install -y nodejs
  - npm install -g @angular/cli
  - docker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=passw0rD!' --network machete-bridge -p 1433:1433 --name sqlserver -d mcr.microsoft.com/mssql/server

#assembly_info: (change assembly values, e.g., visibility)

#nuget: (custom feed)

platform: Any CPU

configuration:
  - Release

# MSBuild settings; NOT a build step
#build: 

# dotnet build includes restore
before_build:
  - sh: node --version </dev/null
  - sh: dotnet --version
  - sh: dotnet clean
  - sh: cd UI
  - sh: npm install
  - sh: npm run --silent build-local-dev
  - sh: npm run start-local-dev &
  - sh: cd ..
  - sh: sed -i "s/APPVEYOR_VERSION/$APPVEYOR_BUILD_VERSION/" "./Machete.Web/Views/Home/Index.cshtml"
  - sh: dotnet build

# (THIS is the build step)
build_script:
  - sh: dotnet test Machete.Test

after_build:
  - sh: cd Machete.Web
  - sh: dotnet publish -o published
  - sh: cd ..
  - sh: if [ $APPVEYOR_REPO_BRANCH == 'master' ]; then docker build -t ndlonmachete/debian:$APPVEYOR_BUILD_VERSION .; fi
  - sh: if [ $APPVEYOR_REPO_BRANCH != 'master' ]; then docker build -t ndlonmachete/debian:$APPVEYOR_BUILD_VERSION-beta .; fi
  - sh: docker images
  #- sh: docker login -u chaim1221 -p "$DOCKER_PASSWORD"
  #- sh: if [ $APPVEYOR_REPO_BRANCH == 'master' ]; then docker push ndlonmachete/debian:$APPVEYOR_BUILD_VERSION; fi
  #- sh: if [ $APPVEYOR_REPO_BRANCH != 'master' ]; then docker push ndlonmachete/debian:$APPVEYOR_BUILD_VERSION-beta; fi

#before_package:

# This may make it unnecessary to split up Machete.Test; TODO try it out
#test:
#  assemblies:
#    only:
#      - asm1.dll
#      - asm2.dll
#  categories:
#    only:
#      - UI
#      - E2E

#before_test:
#test_script:
#after_test:

#artifacts:
#deploy:
#before_deploy:
#after_deploy:
#deploy_script:
#on_success
#on_failure
#on_finish
#notifications:
 # - provider: Slack
  #  incoming_webhook: https://hooks.slack.com/services/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
# ...or using auth token
# - provider: Slack
#   auth_token:
#     secure: kBl9BlxvRMr9liHmnBs14A== (e.g.)
#   channel: status-updates
#   template: "{message}, {commitId}, ..."
